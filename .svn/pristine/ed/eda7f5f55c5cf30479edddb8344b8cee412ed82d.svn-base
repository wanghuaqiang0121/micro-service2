package org.web.module.bone.age.controller;

import java.util.Date;
import java.util.Map;

import javax.annotation.Resource;

import org.service.core.api.ApiCodeEnum;
import org.service.core.api.JsonApi;
import org.service.core.auth.control.RequiresAuthentication;
import org.service.core.auth.level.Level;
import org.service.core.entity.BaseEntity;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.validation.BindingResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RestController;
import org.web.module.bone.age.domain.AiReadFilm;
import org.web.module.bone.age.global.BaseGlobal;
import org.web.module.bone.age.service.AiReadFilmService;


/**
 * Copyright © 2019 四川易迅通健康医疗技术发展有限公司. All rights reserved.
 *
 * @author: ChenYan
 * @date: 2019年3月4日
 * @description: 人工智能评级表
 */
@RestController 
public class AiReadFilmController {
	
	@Resource
	private AiReadFilmService aiReadFilmService;
	
	
	/**
	 * @author: ChenYan
	 * @date: 2019年3月4日
	 * @param aiReadFilm
	 * @param result
	 * @param token
	 * @param organizationTeamId
	 * @return
	 * @description: 人工智能评级记录表新增（每次新增都删除原来的）
	 */
	@RequiresAuthentication(ignore=true,value = { "web-module-bone-age:ai-read-film:insert" },level = Level.OPERATION)
	@PostMapping(value = { "/ai/read/film" })
	@Transactional
	public JsonApi insert(@RequestBody @Validated({ BaseEntity.Insert.class }) AiReadFilm aiReadFilm,
			BindingResult result, @RequestHeader(required = true, value = BaseGlobal.TOKEN_FLAG) String token,
			@RequestHeader(required = true, value = BaseGlobal.ORGANIZATION_ID) Integer organizationId,
			@RequestHeader(required = true, value = BaseGlobal.ORGANIZATION_TEAM_ID) Integer organizationTeamId) {
		/*查询数据是否已存在*/
		aiReadFilm.setBaseBoneAgeOrderId(aiReadFilm.getBaseBoneAgeOrderId());
		Map<String, Object> aiReadFilmMap=aiReadFilmService.getOne(aiReadFilm);
		/*存在先删除*/
		if (aiReadFilmMap!=null) {
			if (aiReadFilmService.delete(aiReadFilm)<0) {
				throw new RuntimeException();
			}
		}
		aiReadFilm.setOrganizationId(organizationId);
		aiReadFilm.setCreateTime(new Date());
		if (aiReadFilmService.insert(aiReadFilm)>0) {
			return new JsonApi(ApiCodeEnum.OK);
		}
		return new JsonApi(ApiCodeEnum.FAIL);
	}
	

}
