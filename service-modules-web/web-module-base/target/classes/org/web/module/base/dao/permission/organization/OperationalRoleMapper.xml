<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.web.module.base.dao.permission.organization.OperationalRoleMapper">

	<!--新增机构角色  -->
	<insert id="insert" parameterType="org.web.module.base.domain.permission.organization.OperationalRole" keyProperty="id" useGeneratedKeys="true">
		INSERT INTO base_operational_role(`name`,`code`,is_used,create_date,remark)
		 VALUES (#{name},#{code},#{isUsed},#{createDate},#{remark})
	</insert>

	<!--修改机构角色  -->
	<update id="update" parameterType="org.web.module.base.domain.permission.organization.OperationalRole">
		UPDATE  base_operational_role SET id=#{id}
			<if test="name!=null and name!=''">
			,`name`=#{name}
			</if>
			<if test="code!=null and code!=''">
			,code=#{code}
			</if>
			<if test="isUsed!=null">
			,is_used=#{isUsed}
			</if>	
			<if test="remark!=null">
			,remark=#{remark}
			</if>
	  WHERE id=#{id}
	</update>
	<!--查询机构角色数据唯一性  -->
	<select id="getRepeat" parameterType="org.web.module.base.domain.permission.organization.OperationalRole" resultType="map">
		SELECT
			bor.id,
			bor.`code`,
			bor.`name`
		FROM
			base_operational_role bor
		WHERE
			bor.`code` = #{code}
	</select>
	<!--查询机构角色详情  -->
	<select id="getOne" parameterType="org.web.module.base.domain.permission.organization.OperationalRole" resultType="map">
		SELECT
			bor.id,
			bor.`code`,
			bor.`name`,
			bor.is_used isUsed,	
			bor.create_date createDate,	
			bor.remark
		FROM
			base_operational_role bor
		WHERE
		    bor.id=#{id}
	</select>
	<!--查询机构角色列表  -->
	<select id="getList" parameterType="org.web.module.base.domain.permission.organization.OperationalRole" resultType="map">
	SELECT
			bor.id,
			bor.`code`,
			bor.`name`,
			bor.is_used isUsed,	
			bor.create_date createDate,	
			bor.remark
		FROM
			base_operational_role bor
			<where>
			  <if test="isUsed!=null">
			     bor.is_used = #{isUsed}
			  </if>
			  <if test="name!=null and name!=''">
			   and  bor.`name`  like CONCAT(CONCAT('%', #{name}), '%')
			  </if>
			  <if test="code!=null and code!=''">
			   and  bor.`code`  like CONCAT(CONCAT('%', #{code}), '%')
			  </if>
			</where>
	</select>
</mapper>