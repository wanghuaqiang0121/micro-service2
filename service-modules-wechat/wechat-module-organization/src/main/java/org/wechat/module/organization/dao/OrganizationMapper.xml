<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.wechat.module.organization.dao.OrganizationMapper">

  
  <!-- 定义查询详情结果集 -->
    <resultMap type="map" id="organizationMap">
		<result column="id" property="id"/>
		<collection property="site" column="id" javaType="list" select="getOrganizationSiteList"/>
    </resultMap>
  <!-- 检查机构详情 -->
  <select id="getOne" parameterType="org.wechat.module.organization.domain.Organization" resultMap="organizationMap">
		SELECT
			bo.id,
			bo.`code`,
			bo.pid,
			bo.organization_type_id organizationTypeId,
			bo.`name`,
			bo.`status`,
			bo.phone,
			bo.logo,
			bo.picture,
			bo.create_date createDate,
			bo.remark,
			bot.`name` organizationTypeName
		FROM
			base_organization bo
		LEFT JOIN base_organization_type bot ON bot.id = bo.organization_type_id
		WHERE
			bo.id = #{id}
  </select>
   <!-- 查询机构对应的站点列表 -->
    <select id="getOrganizationSiteList" parameterType="int" resultType="map">
		SELECT
			bos.id,
			bos.organization_id orgnizationId,
			bos.`name`,
			bos.picture,
			bos.province,
			bos.city,
			bos.area,
			bos.street,
			bos.address,
			bos.lng,
			bos.lat,
			bos.create_date createDate,
			bos.remark
		FROM
			base_organization_site bos
		WHERE
			bos.organization_id=#{id}
    </select>
  <!-- 检查机构列表 -->
  <select id="getList" parameterType="org.wechat.module.organization.domain.Organization" resultType="map">
		SELECT
			bo.id,
			bo.`code`,
			bo.pid,
			bo.organization_type_id organizationTypeId,
			bo.`name`,
			bo.`status`,
			bo.phone,
			bo.logo,
			bo.province,
			bo.city,
			bo.area,
			bo.street,
			bo.community,
			bo.address,
			bo.picture,
			bo.create_date createDate,
			bo.remark,
			bot.`name` organizationTypeName,
			fn_print_distance(#{lng},#{lat},bo.lng,bo.lat) distance
		FROM
			base_organization bo
		LEFT JOIN base_organization_type bot ON bot.id = bo.organization_type_id
		<where>
			<if test="id !=null">
				(bo.id=#{id} or bo.pid=#{id})
			</if>
			<if test="code !=null and code !='' ">
				and bo.`code`=#{code}
			</if>
			<if test="name !=null and name !='' ">
				and bo.`name` like CONCAT(CONCAT('%', #{name}), '%')
			</if>
			<if test="organizationTypeId !=null">
				and bo.organization_type_id=#{organizationTypeId}
			</if>
			<if test="status !=null">
				and bo.`status`=#{status}
			</if>
			<if test="lng!=null and lat!=null">
				<if test="rectangle !=null">
					and (
						(bo.lng BETWEEN #{rectangle.minX} and
						#{rectangle.maxX}) or (bo.lat BETWEEN
						#{rectangle.minY} and
						#{rectangle.maxY})
					)
				</if>
			</if>
		</where>
		GROUP BY bo.id
			<choose>
				<when test="maxRaidus !=null and minRaidus !=null ">
					HAVING distance &lt;= #{maxRaidus} and distance &gt; = #{minRaidus}
				</when>
				<otherwise>
					<if test="maxRaidus !=null">
						HAVING distance &lt;= #{maxRaidus}
					</if>
					<if test="minRaidus !=null">
						HAVING distance &gt;= #{minRaidus}
					</if>
				</otherwise>
			</choose>
		ORDER BY distance
  </select>
  
</mapper>